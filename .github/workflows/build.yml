name: Build pipeline
on:
  push:
  pull_request:
  release:
    types: [released]
  workflow_dispatch:

jobs:
  build:
    name: 🔨 Build distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: 🏗 Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: 🏗 Install build dependencies
        run: >-
          python -m pip install wheel --user
      - name: 🔨 Build a binary wheel and a source tarball
        run: >-
          python setup.py sdist bdist_wheel
      - name: ⬆ Upload build result
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist

  pre-commit:
    name: 🧹 Pre-commit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: 🏗 Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: 🏗 Set up pre-commit
        run: |
          pip install pre-commit
      - name: 🚀 Run pre-commit
        run: |
          pre-commit run --all-files --show-diff-on-failure

  test-install:
    name: 🧪 Installation test
    strategy:
      matrix:
        python: ["3.7", "3.8", "3.9", "3.10", "3.11", "3.12"]
    runs-on: ubuntu-22.04 # change back to ubuntu-latest once we drop Python 3.7
    steps:
      - uses: actions/checkout@v4
      - name: 🏗 Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
      - name: 🚀 Set up test dependencies & run test install
        run: |
          pip install octoprint
          pip install -e .[develop]

  e2e:
    name: 🧪 E2E tests
    needs: build
    runs-on: ubuntu-22.04 # change back to ubuntu-latest once we drop Python 3.7 & upgrade playwright
    strategy:
      matrix:
        octoprint: ["master", "maintenance"]
    steps:
      - name: ⬇ Download build result
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: 🎭 Run OctoPrint's E2E Tests
        uses: OctoPrint/actions/e2e@main
        with:
          ref: ${{ matrix.octoprint }}
          deps: ${{ github.workspace }}/dist/*.whl
          suffix: "-${{ matrix.octoprint }}"

  publish-on-testpypi:
    name: 📦 Publish on TestPyPI
    if: github.event_name == 'release'
    needs:
      - build
      - pre-commit
      - e2e
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    environment:
      name: testpypi
      url: https://test.pypi.org/p/OctoPrint-FirmwareCheck
    steps:
      - name: ⬇ Download build result
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist
      - name: 📦 Publish to index
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/

  publish-on-pypi:
    name: 📦 Publish tagged releases to PyPI
    if: github.event_name == 'release'
    needs: publish-on-testpypi
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    environment:
      name: pypi
      url: https://pypi.org/p/OctoPrint-FirmwareCheck
    steps:
      - name: ⬇ Download build result
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist
      - name: 📦 Publish to index
        uses: pypa/gh-action-pypi-publish@release/v1
